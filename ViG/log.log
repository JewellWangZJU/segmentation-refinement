/opt/conda/envs/sam_hq_env/lib/python3.9/site-packages/timm/models/helpers.py:7: FutureWarning: Importing from timm.models.helpers is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
/opt/conda/envs/sam_hq_env/lib/python3.9/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/opt/conda/envs/sam_hq_env/lib/python3.9/site-packages/timm/models/registry.py:4: FutureWarning: Importing from timm.models.registry is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
Train batch number: 92
Test batch number: 3
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
START TRAIN.
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 0/92] Total:1.617
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 1/92] Total:1.631
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 2/92] Total:1.652
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 3/92] Total:1.689
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 4/92] Total:1.515
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 5/92] Total:1.478
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 6/92] Total:1.386
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 7/92] Total:1.394
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 8/92] Total:1.390
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 9/92] Total:1.376
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 10/92] Total:1.281
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 11/92] Total:1.303
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 12/92] Total:1.234
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 13/92] Total:1.265
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 14/92] Total:1.191
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 15/92] Total:1.303
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 16/92] Total:1.179
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 17/92] Total:1.236
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 18/92] Total:1.269
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 19/92] Total:1.229
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 20/92] Total:1.186
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 21/92] Total:1.151
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 22/92] Total:1.140
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 23/92] Total:1.144
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 24/92] Total:1.137
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 25/92] Total:1.127
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 26/92] Total:1.150
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 27/92] Total:1.116
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 28/92] Total:1.143
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 29/92] Total:1.130
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 30/92] Total:1.122
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 31/92] Total:1.019
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: 