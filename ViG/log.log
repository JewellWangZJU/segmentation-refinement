/opt/conda/envs/sam_hq_env/lib/python3.9/site-packages/timm/models/helpers.py:7: FutureWarning: Importing from timm.models.helpers is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
/opt/conda/envs/sam_hq_env/lib/python3.9/site-packages/timm/models/layers/__init__.py:48: FutureWarning: Importing from timm.models.layers is deprecated, please import via timm.layers
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.layers", FutureWarning)
/opt/conda/envs/sam_hq_env/lib/python3.9/site-packages/timm/models/registry.py:4: FutureWarning: Importing from timm.models.registry is deprecated, please import via timm.models
  warnings.warn(f"Importing from {__name__} is deprecated, please import via timm.models", FutureWarning)
Train batch number: 92
Test batch number: 3
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
START TRAIN.
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 0/92] Total:1.458
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 1/92] Total:1.814
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 2/92] Total:1.463
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 3/92] Total:1.648
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 4/92] Total:1.383
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 5/92] Total:1.418
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 6/92] Total:1.334
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 7/92] Total:1.304
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 8/92] Total:1.304
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 9/92] Total:1.287
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 10/92] Total:1.188
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 11/92] Total:1.252
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 12/92] Total:1.215
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 13/92] Total:1.187
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 14/92] Total:1.146
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 15/92] Total:1.164
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 16/92] Total:1.175
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 17/92] Total:1.165
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 18/92] Total:1.118
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 19/92] Total:1.069
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 20/92] Total:1.124
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 21/92] Total:1.219
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 22/92] Total:1.146
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 23/92] Total:1.088
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 24/92] Total:1.066
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 25/92] Total:1.095
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 26/92] Total:1.073
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 27/92] Total:1.079
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 28/92] Total:1.048
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 29/92] Total:1.063
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 30/92] Total:1.042
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 31/92] Total:0.943
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 32/92] Total:0.989
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 33/92] Total:1.028
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 34/92] Total:1.062
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 35/92] Total:1.090
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 36/92] Total:1.024
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 37/92] Total:1.083
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 38/92] Total:1.057
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 39/92] Total:1.020
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 40/92] Total:1.025
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 41/92] Total:1.081
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 42/92] Total:0.949
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 43/92] Total:1.185
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 44/92] Total:1.061
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 45/92] Total:1.035
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 46/92] Total:0.967
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 47/92] Total:0.923
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 48/92] Total:0.978
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 49/92] Total:0.991
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 50/92] Total:1.064
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 51/92] Total:1.050
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 52/92] Total:0.992
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 53/92] Total:0.980
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 54/92] Total:1.057
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 55/92] Total:1.049
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 56/92] Total:0.961
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 57/92] Total:1.000
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 58/92] Total:0.968
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 59/92] Total:0.989
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 60/92] Total:1.028
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 61/92] Total:0.914
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 62/92] Total:0.988
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 63/92] Total:0.933
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 64/92] Total:1.014
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 65/92] Total:0.961
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 66/92] Total:0.963
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 67/92] Total:0.949
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 68/92] Total:0.964
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 69/92] Total:1.031
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 70/92] Total:0.890
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 71/92] Total:0.908
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 72/92] Total:0.931
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 73/92] Total:0.976
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 74/92] Total:0.957
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 75/92] Total:1.020
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 76/92] Total:1.013
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 77/92] Total:0.892
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 78/92] Total:0.973
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 79/92] Total:0.948
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 80/92] Total:1.113
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 81/92] Total:1.095
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 82/92] Total:0.949
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 83/92] Total:0.934
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 84/92] Total:1.010
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 85/92] Total:0.985
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 86/92] Total:1.002
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 87/92] Total:0.994
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 88/92] Total:1.005
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 89/92] Total:0.890
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 90/92] Total:0.901
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 91/92] Total:0.885
/mnt/data/myproject/segmentation-refinement/ViG/metrics/cldice.py:32: FutureWarning: `skeletonize_3d` is deprecated since version 0.23 and will be removed in version 0.25. Use `skimage.morphology.skeletonize` instead.
  tprec = cl_score(v_p,skeletonize_3d(v_l))
/mnt/data/myproject/segmentation-refinement/ViG/metrics/cldice.py:33: FutureWarning: `skeletonize_3d` is deprecated since version 0.23 and will be removed in version 0.25. Use `skimage.morphology.skeletonize` instead.
  tsens = cl_score(v_l,skeletonize_3d(v_p))
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 0/3] Total DSC:0.090
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 1/3] Total DSC:0.304
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 2/3] Total DSC:0.303
[Epoch :0] total loss:0.885 
FINISH.
Train batch number: 2
Test batch number: 183
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
using relative_pos
START TRAIN.
[DBG] stem: torch.Size([2, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([2, 80, 240, 240])
DBG downsample to stage 1: torch.Size([2, 160, 120, 120])
[DBG] stage1_out: torch.Size([2, 160, 120, 120])
DBG downsample to stage 2: torch.Size([2, 400, 60, 60])
[DBG] stage2_out: torch.Size([2, 400, 60, 60])
DBG downsample to stage 3: torch.Size([2, 640, 30, 30])
[DBG] stage3_out: torch.Size([2, 640, 30, 30])
[DBG] features[0]: torch.Size([2, 80, 240, 240])
[DBG] features[1]: torch.Size([2, 160, 120, 120])
[DBG] features[2]: torch.Size([2, 400, 60, 60])
[DBG] features[3]: torch.Size([2, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([2, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([2, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([2, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([2, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 0/2] Total:1.505
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[epoch:0][Iteration : 1/2] Total:1.781
/mnt/data/myproject/segmentation-refinement/ViG/metrics/cldice.py:14: RuntimeWarning: invalid value encountered in divide
  return np.sum(v*s)/np.sum(s)
/mnt/data/myproject/segmentation-refinement/ViG/metrics/cldice.py:34: RuntimeWarning: invalid value encountered in scalar divide
  return 2*tprec*tsens/(tprec+tsens)
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 0/183] Total DSC:0.025
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 36/183] Total DSC:0.025
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 72/183] Total DSC:0.019
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 108/183] Total DSC:0.021
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 144/183] Total DSC:0.023
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Iteration : 180/183] Total DSC:0.021
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[DBG] stem: torch.Size([1, 80, 240, 240])
[DBG] pos_embed_resized: torch.Size([1, 80, 240, 240])
[DBG] stage0_out: torch.Size([1, 80, 240, 240])
DBG downsample to stage 1: torch.Size([1, 160, 120, 120])
[DBG] stage1_out: torch.Size([1, 160, 120, 120])
DBG downsample to stage 2: torch.Size([1, 400, 60, 60])
[DBG] stage2_out: torch.Size([1, 400, 60, 60])
DBG downsample to stage 3: torch.Size([1, 640, 30, 30])
[DBG] stage3_out: torch.Size([1, 640, 30, 30])
[DBG] features[0]: torch.Size([1, 80, 240, 240])
[DBG] features[1]: torch.Size([1, 160, 120, 120])
[DBG] features[2]: torch.Size([1, 400, 60, 60])
[DBG] features[3]: torch.Size([1, 640, 30, 30])
[DBG] decoder in feat[0]: torch.Size([1, 80, 240, 240]) (expect in_channels=80
[DBG] decoder in feat[1]: torch.Size([1, 160, 120, 120]) (expect in_channels=160
[DBG] decoder in feat[2]: torch.Size([1, 400, 60, 60]) (expect in_channels=400
[DBG] decoder in feat[3]: torch.Size([1, 640, 30, 30]) (expect in_channels=640
[Epoch :0] total loss:1.781 
FINISH.
